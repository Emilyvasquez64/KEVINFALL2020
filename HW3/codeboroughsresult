> load("acs2017_ny_data.RData")
> PUMA_lev<-read.csv("PUMA_levels.csv")
> dat_NYC <- subset(acs2017_ny, (acs2017_ny$in_NYC == 1)&(acs2017_ny$AGE > 20) & (acs2017_ny$AGE < 66))
> attach(dat_NYC)
The following objects are masked from dat_NYC (pos = 4):

    AfAm, AGE, Amindian, ANCESTR1, ANCESTR1D, ANCESTR2, ANCESTR2D, Asian,
    below_150poverty, below_200poverty, below_povertyline, BPL, BPLD, BUILTYR2,
    CITIZEN, CLASSWKR, CLASSWKRD, Commute_bus, Commute_car, Commute_other,
    Commute_rail, Commute_subway, COSTELEC, COSTFUEL, COSTGAS, COSTWATR,
    DEGFIELD, DEGFIELD2, DEGFIELD2D, DEGFIELDD, DEPARTS, EDUC, educ_advdeg,
    educ_college, educ_hs, educ_nohs, educ_somecoll, EDUCD, EMPSTAT, EMPSTATD,
    FAMSIZE, female, foodstamps, FOODSTMP, FTOTINC, FUELHEAT, GQ,
    has_AnyHealthIns, has_PvtHealthIns, HCOVANY, HCOVPRIV, HHINCOME, Hisp_Cuban,
    Hisp_DomR, Hisp_Mex, Hisp_PR, HISPAN, HISPAND, Hispanic, in_Bronx,
    in_Brooklyn, in_Manhattan, in_Nassau, in_NYC, in_Queens, in_StatenI,
    in_Westchester, INCTOT, INCWAGE, IND, LABFORCE, LINGISOL, MARST, MIGCOUNTY1,
    MIGPLAC1, MIGPUMA1, MIGRATE1, MIGRATE1D, MORTGAGE, NCHILD, NCHLT5, OCC,
    OWNCOST, OWNERSHP, OWNERSHPD, POVERTY, PUMA, PWPUMA00, RACE, race_oth, RACED,
    RELATE, RELATED, RENT, ROOMS, SCHOOL, SEX, SSMC, TRANTIME, TRANWORK,
    UHRSWORK, UNITSSTR, unmarried, veteran, VETSTAT, VETSTATD, white, WKSWORK2,
    YRSUSA1

The following objects are masked from dat_use (pos = 5):

    AfAm, AGE, Amindian, ANCESTR1, ANCESTR1D, ANCESTR2, ANCESTR2D, Asian,
    below_150poverty, below_200poverty, below_povertyline, BPL, BPLD, BUILTYR2,
    CITIZEN, CLASSWKR, CLASSWKRD, Commute_bus, Commute_car, Commute_other,
    Commute_rail, Commute_subway, COSTELEC, COSTFUEL, COSTGAS, COSTWATR,
    DEGFIELD, DEGFIELD2, DEGFIELD2D, DEGFIELDD, DEPARTS, EDUC, educ_advdeg,
    educ_college, educ_hs, educ_nohs, educ_somecoll, EDUCD, EMPSTAT, EMPSTATD,
    FAMSIZE, female, foodstamps, FOODSTMP, FTOTINC, FUELHEAT, GQ,
    has_AnyHealthIns, has_PvtHealthIns, HCOVANY, HCOVPRIV, HHINCOME, Hisp_Cuban,
    Hisp_DomR, Hisp_Mex, Hisp_PR, HISPAN, HISPAND, Hispanic, in_Bronx,
    in_Brooklyn, in_Manhattan, in_Nassau, in_NYC, in_Queens, in_StatenI,
    in_Westchester, INCTOT, INCWAGE, IND, LABFORCE, LINGISOL, MARST, MIGCOUNTY1,
    MIGPLAC1, MIGPUMA1, MIGRATE1, MIGRATE1D, MORTGAGE, NCHILD, NCHLT5, OCC,
    OWNCOST, OWNERSHP, OWNERSHPD, POVERTY, PUMA, PWPUMA00, RACE, race_oth, RACED,
    RELATE, RELATED, RENT, ROOMS, SCHOOL, SEX, SSMC, TRANTIME, TRANWORK,
    UHRSWORK, UNITSSTR, unmarried, veteran, VETSTAT, VETSTATD, white, WKSWORK2,
    YRSUSA1

The following objects are masked from dat_use (pos = 6):

    AfAm, AGE, Amindian, ANCESTR1, ANCESTR1D, ANCESTR2, ANCESTR2D, Asian,
    below_150poverty, below_200poverty, below_povertyline, BPL, BPLD, BUILTYR2,
    CITIZEN, CLASSWKR, CLASSWKRD, Commute_bus, Commute_car, Commute_other,
    Commute_rail, Commute_subway, COSTELEC, COSTFUEL, COSTGAS, COSTWATR,
    DEGFIELD, DEGFIELD2, DEGFIELD2D, DEGFIELDD, DEPARTS, EDUC, educ_advdeg,
    educ_college, educ_hs, educ_nohs, educ_somecoll, EDUCD, EMPSTAT, EMPSTATD,
    FAMSIZE, female, foodstamps, FOODSTMP, FTOTINC, FUELHEAT, GQ,
    has_AnyHealthIns, has_PvtHealthIns, HCOVANY, HCOVPRIV, HHINCOME, Hisp_Cuban,
    Hisp_DomR, Hisp_Mex, Hisp_PR, HISPAN, HISPAND, Hispanic, in_Bronx,
    in_Brooklyn, in_Manhattan, in_Nassau, in_NYC, in_Queens, in_StatenI,
    in_Westchester, INCTOT, INCWAGE, IND, LABFORCE, LINGISOL, MARST, MIGCOUNTY1,
    MIGPLAC1, MIGPUMA1, MIGRATE1, MIGRATE1D, MORTGAGE, NCHILD, NCHLT5, OCC,
    OWNCOST, OWNERSHP, OWNERSHPD, POVERTY, PUMA, PWPUMA00, RACE, race_oth, RACED,
    RELATE, RELATED, RENT, ROOMS, SCHOOL, SEX, SSMC, TRANTIME, TRANWORK,
    UHRSWORK, UNITSSTR, unmarried, veteran, VETSTAT, VETSTATD, white, WKSWORK2,
    YRSUSA1

The following objects are masked from dat_use (pos = 7):

    AfAm, AGE, Amindian, ANCESTR1, ANCESTR1D, ANCESTR2, ANCESTR2D, Asian,
    below_150poverty, below_200poverty, below_povertyline, BPL, BPLD, BUILTYR2,
    CITIZEN, CLASSWKR, CLASSWKRD, Commute_bus, Commute_car, Commute_other,
    Commute_rail, Commute_subway, COSTELEC, COSTFUEL, COSTGAS, COSTWATR,
    DEGFIELD, DEGFIELD2, DEGFIELD2D, DEGFIELDD, DEPARTS, EDUC, educ_advdeg,
    educ_college, educ_hs, educ_nohs, educ_somecoll, EDUCD, EMPSTAT, EMPSTATD,
    FAMSIZE, female, foodstamps, FOODSTMP, FTOTINC, FUELHEAT, GQ,
    has_AnyHealthIns, has_PvtHealthIns, HCOVANY, HCOVPRIV, HHINCOME, Hisp_Cuban,
    Hisp_DomR, Hisp_Mex, Hisp_PR, HISPAN, HISPAND, Hispanic, in_Bronx,
    in_Brooklyn, in_Manhattan, in_Nassau, in_NYC, in_Queens, in_StatenI,
    in_Westchester, INCTOT, INCWAGE, IND, LABFORCE, LINGISOL, MARST, MIGCOUNTY1,
    MIGPLAC1, MIGPUMA1, MIGRATE1, MIGRATE1D, MORTGAGE, NCHILD, NCHLT5, OCC,
    OWNCOST, OWNERSHP, OWNERSHPD, POVERTY, PUMA, PWPUMA00, RACE, race_oth, RACED,
    RELATE, RELATED, RENT, ROOMS, SCHOOL, SEX, SSMC, TRANTIME, TRANWORK,
    UHRSWORK, UNITSSTR, unmarried, veteran, VETSTAT, VETSTATD, white, WKSWORK2,
    YRSUSA1

> borough_f <- factor((in_Bronx + 2*in_Manhattan + 3*in_StatenI + 4*in_Brooklyn + 5*in_Queens), levels=c(1,2,3,4,5),labels = c("Bronx","Manhattan","Staten Island","Brooklyn","Queens"))
> 
> 
> 
> 
> norm_varb <- function(X_in) {
+   (max(X_in, na.rm = TRUE) - X_in)/( max(X_in, na.rm = TRUE) - min(X_in, na.rm = TRUE) )
+ }
>   
> #is.na(OWNCOST) <- which(OWNCOST == 9999999)
> #housing_cost <- OWNCOST + RENT
> add_test<- COSTGAS + COSTFUEL + COSTWATR + COSTELEC + FAMSIZE + FUELHEAT 
> norm_1 <- norm_varb(add_test)
> #norm_housing_cost <- norm_varb(housing_cost)
> 
> norm_2 <- norm_varb(HHINCOME)
> 
> 
> #data_use_prelim <- data.frame(norm_inc_tot,norm_housing_cost)
> #data_use_prelim <- data.frame(norm_inc_tot,norm_COSTGAS)
> data_use_prelim <- data.frame(norm_1,norm_2)
> 
> 
> good_obs_data_use <- complete.cases(data_use_prelim,borough_f)
> dat_use <- subset(data_use_prelim,good_obs_data_use)
> y_use <- subset(borough_f,good_obs_data_use)
> levels
function (x) 
UseMethod("levels")
<bytecode: 0x7ff9028acf20>
<environment: namespace:base>
> set.seed(12345)
> NN_obs <- sum(good_obs_data_use == 1)
> select1 <- (runif(NN_obs) < 0.8)
> train_data <- subset(dat_use,select1)
> test_data <- subset(dat_use,(!select1))
> cl_data <- y_use[select1]
> true_data <- y_use[!select1]
> 
> summary(cl_data)
        Bronx     Manhattan Staten Island      Brooklyn        Queens 
         4613          4896          1839         12073         10710 
> prop.table(summary(cl_data))
        Bronx     Manhattan Staten Island      Brooklyn        Queens 
   0.13515572    0.14344731    0.05388064    0.35372535    0.31379098 
> summary(train_data)
     norm_1           norm_2      
 Min.   :0.0000   Min.   :0.0000  
 1st Qu.:0.2232   1st Qu.:0.9229  
 Median :0.4452   Median :0.9537  
 Mean   :0.3930   Mean   :0.9374  
 3rd Qu.:0.5675   3rd Qu.:0.9755  
 Max.   :0.9779   Max.   :1.0000  
> require(class)
> for (indx in seq(1, 9, by= 2)) {
+   pred_borough <- knn(train_data, test_data, cl_data, k = indx, l = 0, prob = FALSE, use.all = TRUE)
+   num_correct_labels <- sum(pred_borough == true_data)
+   correct_rate <- num_correct_labels/length(true_data)
+   print(c(indx,correct_rate))
+ }
[1] 1.000000 0.798117
[1] 3.0000000 0.5191276
[1] 5.0000000 0.5039924
[1] 7.0000000 0.4931474
[1] 9.000000 0.487427
# we used the sum of COSTGAS + COSTFUEL + COSTWATR + COSTELEC + FAMSIZE + FUELHEAT  and measured it against HHINCOME in order to predict in which borough specific people live, 
#with this we were able to obtain a result with 79% accuracy 
